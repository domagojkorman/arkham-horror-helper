{
  "root": true,
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaVersion": 2018,
    "sourceType": "module",
    "project": "./tsconfig.json",
    "ecmaFeatures": {
      "arrowFunctions": false
    }
  },
  "plugins": ["ember"],
  "extends": "plugin:ember/recommended",
  "env": {
    "browser": true,
    "node": true,
    "qunit": true,
    "embertest": true
  },
  "reportUnusedDisableDirectives": true,
  "rules": {
    // Possible errors
    "for-direction": "error",
    "getter-return": "error",
    "no-async-promise-executor": "error",
    "no-await-in-loop": "warn",
    "no-compare-neg-zero": "error",
    "no-cond-assign": "error",
    "no-console": "error",
    "no-constant-condition": ["error", { "checkLoops": false }],
    "no-control-regex": "error",
    "no-debugger": "error",
    "no-dupe-args": "error",
    "no-dupe-else-if": "error",
    "no-dupe-keys": "error",
    "no-duplicate-case": "error",
    "no-empty": "error",
    "no-empty-character-class": "error",
    "no-ex-assign": "error",
    "no-extra-boolean-cast": ["error", { "enforceForLogicalOperands": true }],
    "no-extra-parens": ["all", { "nestedBinaryExpressions": false }],
    "no-extra-semi": "error",
    "no-func-assign": "error",
    "no-import-assign": "error",
    "no-inner-declarations": ["error", "both"],
    "no-invalid-regexp": "error",
    "no-irregular-whitespace": ["error", { "skipStrings": false, "skipComments": false, "skipRegExps": false, "skipTemplates": false }],
    "no-loss-of-precision": "error",
    "no-misleading-character-class": "error",
    "no-obj-calls": "error",
    "no-promise-executor-return": "error",
    "no-prototype-builtins": "error",
    "no-regex-spaces": "error",
    "no-setter-return": "error",
    "no-sparse-arrays": "error",
    "no-template-curly-in-string": "warn",
    "no-unexpected-multiline": "error",
    "no-unreachable": "error",
    "no-unreachable-loop": "error",
    "no-unsafe-finally": "error",
    "no-unsafe-negation": ["error", { "enforceForOrderingRelations": true }],
    "no-useless-backreference": "error",
    "require-atomic-updates": "error",
    "use-isnan": ["error", { "enforceForIndexOf": true }],
    "valid-typeof": ["error", { "requireStringLiterals": true }],

    // Best practices
    "accessor-pairs": ["error", { "setWithoutGet": true, "getWithoutSet": false, "enforceForClassMembers": true }],
    "array-callback-return": "error",
    "block-scoped-var": "error",
    "class-methods-use-this": "warn",
    "complexity": "off",
    "consistent-return": ["error", { "treatUndefinedAsUnspecified": false }],
    "curly": ["error", "all"],
    "default-case": "error",
    "default-case-last": "error",
    "default-param-last": "error",
    "dot-location": "off",
    "dot-notation": ["error", { "allowKeywords": false }],
    "eqeqeq": ["error", "always"],
    "grouped-accessor-pairs": ["error", "getBeforeSet"],
    "guard-for-in": "warn",
    "max-classes-per-file": ["warn", 1],
    "no-alert": "error",
    "no-caller": "warn",
    "no-case-declarations": "error",
    "no-constructor-return": "error",
    "no-div-regex": "warn",
    "no-else-return": ["warn", { "allowElseIf": true }],
    "no-empty-function": "error",
    "no-empty-pattern": "error",
    "no-eq-null": "warn",
    "no-eval": "error"
  }
}
